import React, { useState } from 'react';
import CustomTable from './GenericTable'; // Make sure the path is correct

const ParentComponent = () => {
  // Static JSON Data
  const data = [
    { id: 1, name: 'John Doe', email: 'john.doe@example.com', phone: '123-456-7890' },
    { id: 2, name: 'Jane Smith', email: 'jane.smith@example.com', phone: '234-567-8901' },
    { id: 3, name: 'Bob Johnson', email: 'bob.johnson@example.com', phone: '345-678-9012' },
    { id: 4, name: 'Alice Williams', email: 'alice.williams@example.com', phone: '456-789-0123' },
    { id: 5, name: 'Charlie Brown', email: 'charlie.brown@example.com', phone: '567-890-1234' },
    { id: 6, name: 'David Davis', email: 'david.davis@example.com', phone: '678-901-2345' },
    { id: 7, name: 'Eva Clark', email: 'eva.clark@example.com', phone: '789-012-3456' },
    { id: 8, name: 'Frank Miller', email: 'frank.miller@example.com', phone: '890-123-4567' },
    { id: 9, name: 'Grace Lee', email: 'grace.lee@example.com', phone: '901-234-5678' },
    { id: 10, name: 'Henry Wilson', email: 'henry.wilson@example.com', phone: '012-345-6789' },
  ];

  // Columns definition for the table
  const columns = [
    { id: 'name', label: 'Name', sortable: true },
    { id: 'email', label: 'Email', sortable: true },
    { id: 'phone', label: 'Phone', sortable: false },
  ];

  // States for pagination and sorting
  const [page, setPage] = useState(0);
  const [rowsPerPage, setRowsPerPage] = useState(5);
  const [sortField, setSortField] = useState('');
  const [sortDirection, setSortDirection] = useState('asc');

  // Handling page change
  const handlePageChange = (event, newPage) => {
    setPage(newPage);
  };

  // Handling rows per page change
  const handleRowsPerPageChange = (event) => {
    setRowsPerPage(parseInt(event.target.value, 10));
    setPage(0); // Reset to first page when changing rows per page
  };

  // Handling sorting
  const handleSort = (property, direction) => {
    setSortField(property);
    setSortDirection(direction);
  };

  // Filter and sort data
  const sortedData = [...data].sort((a, b) => {
    if (!sortField) return 0; // If no sorting field, return original order

    const isAsc = sortDirection === 'asc';
    if (a[sortField] < b[sortField]) return isAsc ? -1 : 1;
    if (a[sortField] > b[sortField]) return isAsc ? 1 : -1;
    return 0;
  });

  // Paginate the sorted data
  const paginatedData = sortedData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);

  return (
    <div>
      <h2>Static JSON Data Table</h2>
      <CustomTable
        columns={columns}
        data={paginatedData}
        totalCount={data.length}
        page={page}
        rowsPerPage={rowsPerPage}
        onPageChange={handlePageChange}
        onRowsPerPageChange={handleRowsPerPageChange}
        onSort={handleSort}
      />
    </div>
  );
};

export default ParentComponent;
